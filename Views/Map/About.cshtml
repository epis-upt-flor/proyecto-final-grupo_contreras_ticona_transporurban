
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>Place Details</title>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>

    @*<link rel="stylesheet" type="text/css" href="./style.css" />*@
    <style>
        /*
        * Always set the map height explicitly to define the size of the div element
        * that contains the map.
        */
        #map {
            height: 100%;
        }

        /*
        * Optional: Makes the sample page fill the window.
        */
        html,
        body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
    @*<script type="module" src="./index.js"></script>*@
</head>
<body>
    <div id="map"></div>

    <!--
      The `defer` attribute causes the callback to execute after the full HTML
      document has been parsed. For non-blocking uses, avoiding race conditions,
      and consistent behavior across browsers, consider loading using Promises.
      See https://developers.google.com/maps/documentation/javascript/load-maps-js-api
      for more information.
      -->

    <script type="text/javascript">
        var map;

        function initMap() {
            // Create a map centered in Pyrmont, Sydney (Australia).
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: -33.8666, lng: 151.1958 },
                zoom: 15
            });

            // Search for Google's office in Australia.
            var request = {
                location: map.getCenter(),
                radius: '500',
                query: 'Google Sydney'
            };

            var service = new google.maps.places.PlacesService(map);
            service.textSearch(request, callback);
        }

        // Checks that the PlacesServiceStatus is OK, and adds a marker
        // using the place ID and location from the PlacesService.
        function callback(results, status) {
            if (status == google.maps.places.PlacesServiceStatus.OK) {
                var marker = new google.maps.Marker({
                    map: map,
                    place: {
                        placeId: results[0].place_id,
                        location: results[0].geometry.location
                    }
                });
            }
        }

        google.maps.event.addDomListener(window, 'load', initMap);


    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB60bIrSUlI-80w4hhJ4tdLNj5LJMIpxKs&callback=initMap&libraries=places&v=weekly"
            defer></script>
</body>
</html>