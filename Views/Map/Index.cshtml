@using Newtonsoft.Json;
@{
    Project.DTO.Transporte transporte = ViewBag.Transporte;
    List<Project.DTO.Transporte> transportes = ViewBag.Transportes;
    string transportesJson = JsonConvert.SerializeObject(transportes);
    string iconoUrl = Url.Content("~/styles/assets/image/autobus.png");

    ViewBag.Title = "Index";
}

@section header{
    <div class="page-header page-header-light">
        <div class="page-header-content header-elements-md-inline">
            <div class="page-title d-flex">
                <h4>
                    <span class="font-weight-semibold"> RUTAS REGISTRADOS</span>
                </h4>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>
        </div>
        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="#" class="breadcrumb-item"><i class="icon-home2 mr-2"></i> INICIO</a>
                    <a href="#" class="breadcrumb-item"> USUARIOS REGISTRADOS</a>
                    <a href="#" class="breadcrumb-item"> REGISTRO DE RUTAS</a>

                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>

        </div>
    </div>
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Rutas Google Maps</title>
    <!-- Bootstrap y Jquery -->
    @*<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">*@
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.7.14/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    @*<script src="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>*@
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <!-- Fin -->
    <!-- Complementos de JQuery -->
    @*<script src="~/Script/locationpicker.jquery.js"></script>*@
    <link rel="stylesheet" type="text/css" href="~/CSS/map.css" />
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB60bIrSUlI-80w4hhJ4tdLNj5LJMIpxKs&callback=initMap&libraries=places,geometry&solution_channel=GMP_QB_commutes_v2_c" async defer></script>
    <script src="https://kit.fontawesome.com/a59b9b09ab.js" crossorigin="anonymous"></script>
    <style>
        .cover {
            position: relative;
            padding: 0px 30px;
        }

        .left {
            position: absolute;
            left: 0;
            top: 50%;
            transform: translateY(-50%);
        }

        .right {
            position: absolute;
            right: 0;
            top: 50%;
            transform: translateY(-50%);
        }

        .scroll-images {
            position: relative;
            width: 100%;
            padding: 10px 0px;
            height: auto;
            display: flex;
            flex-wrap: nowrap;
            overflow-x: hidden;
            overflow-y: hidden;
            scroll-behavior: smooth;
            -webkit-overflow-scrolling: touch;
        }

        .child {
            display: flex;
            justify-content: center;
            align-items: center;
            min-width: 250px;
            height: 200px;
            padding: 0px 15px;
            margin: 1px 10px;
            border: 1px solid #f1f1f1;
            overflow: hidden;
            -webkit-box-shadow: 0px 0px 15px 2px rgb(0 0 0 / 10%);
            box-shadow: 0px 0px 15px 2px rgb(0 0 0 / 10%);
        }

            .child img, .child > svg {
                position: absolute;
                margin-top: -195px;
                width: 80px;
                height: 80px;
                object-fit: cover;
                object-position: center;
                border-radius: 50%;
                background: #03A9F4;
            }

        .scroll-images::-webkit-scrollbar {
            width: 5px;
            height: 8px;
            background-color: #aaa;
        }

        .scroll-images::-webkit-scrollbar-thumb {
            background-color: black;
        }

        button {
            background-color: transparent;
            border: none;
            outline: none;
            cursor: pointer;
            font-size: 25px;
        }
    </style>
    <style>
        /* The Modal (background) */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }

        /* Modal Content */
        .modal-content {
            position: relative;
            background-color: #fefefe;
            margin: auto;
            padding: 0;
            border: 1px solid #888;
            width: 20%;
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
            -webkit-animation-name: animatetop;
            -webkit-animation-duration: 0.4s;
            animation-name: animatetop;
            animation-duration: 0.4s
        }

        /* Add Animation */
        @@-webkit-keyframes animatetop {
            from {
                top: -300px;
                opacity: 0
            }

            to {
                top: 0;
                opacity: 1
            }
        }

        @@keyframes animatetop {
            from {
                top: -300px;
                opacity: 0
            }

            to {
                top: 0;
                opacity: 1
            }
        }

        /* The Close Button */
        .close {
            color: white;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }

        .modal-header {
            padding: 2px 16px;
            background-color: #5cb85c;
            color: white;
        }

        .modal-body {
            padding: 2px 16px;
        }

        .modal-footer {
            padding: 2px 16px;
            background-color: #5cb85c;
            color: white;
        }
    </style>

    <script>
        var _hmt = _hmt || [];
        (function () {
            var hm = document.createElement("script");
            hm.src = "//hm.baidu.com/hm.js?73c27e26f610eb3c9f3feb0c75b03925";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(hm, s);
        })();
    </script>
</head>
<body>
    <!-- SVG -->
    <svg class="hide">
        <defs>
            <symbol id="commutes-transit-icon">
                <path d="M0 0h24v24H0V0z" fill="none" />
                <path d="M12 2c-4 0-8 .5-8 4v9.5C4 17.43 5.57 19 7.5 19L6 20.5v.5h12v-.5L16.5 19c1.93 0 3.5-1.57 3.5-3.5V6c0-3.5-3.58-4-8-4zm5.66 3H6.43c.61-.52 2.06-1 5.57-1 3.71 0 5.12.46 5.66 1zM11 7v3H6V7h5zm2 0h5v3h-5V7zm3.5 10h-9c-.83 0-1.5-.67-1.5-1.5V12h12v3.5c0 .83-.67 1.5-1.5 1.5z" />
                <circle cx="8.5" cy="14.5" r="1.5" />
                <circle cx="15.5" cy="14.5" r="1.5" />
            </symbol>
        </defs>
        <use href="#commutes-transit-icon" />
    </svg>
    <!-- FIN SVG-->

    <div class="container" id="app">
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <div id="ModalMapPreview" style="width:100%; height:500px;"></div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-10">
                <div class="cover">
                    <button class="left" onclick="leftScroll()">
                        <i class="fas fa-angle-double-left"></i>
                    </button>
                    <div class="scroll-images">
                        <div class="child" v-for="item in arrayItems" :key="item.index">
                            <div class="card" style="margin-bottom:10px">
                                <div class="card-body">
                                    <h5 class="card-title">{{item.Nombre}}</h5>

                                    <p class="card-text">{{item.Descripcion}}</p>

                                    <a :href="'AddRutas/' + item.Id" class="btn btn-primary">Agregar Ruta</a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <button class="right" onclick="rightScroll()">
                        <i class="fas fa-angle-double-right"></i>
                    </button>
                </div>
            </div>
            <div class="col-2">
                <button type="button" class="btn btn-primary" id="btnNuevoNotificacion">Agregar Ruta</button>
            </div>
        </div>

        <div id="ModalRutas" class="modal">
            <div class="modal-content">
                <div class="modal-header">
                    <span class="close">&times;</span>
                </div>
                <div class="modal-body">
                    <form id="formRutas" action="CreateTransporte" method="POST">
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <label for="Nombre">Dirección</label>
                            <input type="text" id="Nombre" name="Nombre" class="form-control" />
                        </div>
                        <div class="form-group">
                            <input type="text" id="Descripcion" name="Descripcion" class="form-control" hidden />
                        </div>
                        <div class="form-group">
                            <input id="Latitud" name="Latitud" class="form-control" hidden />
                            <input id="Longitud" name="Longitud" class="form-control" hidden />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button id="btnCancelar" class="btn btn-danger">Cancelar</button>
                    <button id="btnGuardar" class="btn btn-primary">Guardar</button>
                </div>
            </div>
        </div>

    </div>

    <script>
        @*function initMap() {
            var latTransporte = @transporte.Latitud;
            var lngTransporte = @transporte.Longitud;
            var map = new google.maps.Map(document.getElementById('ModalMapPreview'), {
                //center: new google.maps.LatLng(-17.99426, -70.251855),
                center: new google.maps.LatLng(latTransporte, lngTransporte),
                zoom: 14,
                heading: 90,
                tilt: 45
            });
            var infoWindow = new google.maps.InfoWindow;
            $(document).ready(function () {
                $.ajax({
                    url: "ListaRutas",
                    type: "GET",
                    dataType: "json",
                    success: function (datos) {
                        //var transportes = transportes;
                        //$.each(transportes, function (indice, registro) {
                            //var LatLineaRuta = registro.Latitud;
                            //var LngLineaRuta = registro.Longitud;
                            // console.log(datos);
                            // recorrer los datos JSON y construir una tabla HTML
                            $.each(datos, function (index, fila) {
                                // console.log(fila.Id, fila.Ubicacion1, fila.Latitud, fila.Longitud);
                                //if (registro.Id == fila.IdTransporte) {
                                    var idmapa = fila.Id;
                                    var ubicacion = fila.Ubicacion1;
                                    var point = new google.maps.LatLng(
                                        parseFloat(fila.Latitud),
                                        parseFloat(fila.Longitud));
                                    const contentString =
                                        '<div id="content">' +
                                        '<div id="siteNotice">' +
                                        "</div>" +
                                        '<center>' +
                                        '<h3 id="ubicacion">' + ubicacion + '</h3>' +
                                        '</center>' +
                                        '<br>' +
                                        '<div id="bodyContent">' +
                                        '<br>' +
                                        "<p><b>" + ubicacion + "</p>" +
                                        "</p>" +
                                        "</div>" +
                                        "</div>";
                                    var marker = new google.maps.Marker({
                                        map: map,
                                        position: point,
                                        //icon: image
                                    });
                                    marker.addListener('click', function () {
                                        infoWindow.setContent(contentString);
                                        infoWindow.open(map, marker);
                                    });
                                    var objConfigDR = {
                                        map: map,
                                        suppressMarkers: true
                                    };
                                    var objConfigDS = {
                                        origin: new google.maps.LatLng(latTransporte, lngTransporte), // LatLng - string domicilio
                                        //origin: new google.maps.LatLng(LatLineaRuta, LngLineaRuta), // LatLng - string domicilio
                                        destination: new google.maps.LatLng(fila.Latitud, fila.Longitud),
                                        travelMode: google.maps.TravelMode.DRIVING
                                    }
                                    // console.log(objConfigDS);
                                    var ds = new google.maps.DirectionsService(); //Obtener coordenadas
                                    var dr = new google.maps.DirectionsRenderer(objConfigDR); //traduce coordenadas a la ruta visible
                                    ds.route(objConfigDS, rutear);
                                    function rutear(resultados, status) {
                                        //mostrar rutas con coordenadas
                                        if (status == 'OK') {
                                            dr.setDirections(resultados);
                                        } else {
                                            alert("Error " + status);
                                        }
                                    }
                                //}
                            });
                        //});
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log(textStatus, errorThrown);
                    }
                });
            });
        }*@
        var colores = [
            "#FF0000", // Rojo
            "#00FF00", // Verde
            "#0000FF", // Azul
            "#FFA500", // Naranja
            "#FFFF00", // Amarillo
            "#800080", // Púrpura
            "#FFC0CB", // Rosa
            "#008000", // Verde oscuro
            "#000080", // Azul oscuro
            "#FF00FF", // Magenta
            "#800000", // Marrón
            "#00FFFF", // Cian
            "#FF1493", // Rosa intenso
            "#008080", // Verde azulado
            "#800080", // Púrpura
            "#FF4500", // Naranja intenso
            "#C0C0C0", // Plata
            "#808080", // Gris
            "#000000", // Negro
            "#FFFFFF"  // Blanco
        ];
        var iterador = 0;
        // En tu archivo JavaScript
        function initMap() {
            var latTransporte = @transporte.Latitud;
            var lngTransporte = @transporte.Longitud;
            var map = new google.maps.Map(document.getElementById('ModalMapPreview'), {
                center: { lat: latTransporte, lng: lngTransporte },
                zoom: 10
            });
            var LineasRutas = @Html.Raw(Json.Encode(ViewBag.LineasRutas));
            var rutas = @Html.Raw(Json.Encode(ViewBag.Rutas));
            var iconoUrl = '@iconoUrl';
            var icono = {
                url: iconoUrl,
                scaledSize: new google.maps.Size(50, 28),
                //origin: new google.maps.Point(0, 0),
                //anchor: new google.maps.Point(16, 16),
                //optimized: false 
            };
            // Mostrar marcadores para cada transporte
            LineasRutas.forEach(function(transporte) {
                var marker = new google.maps.Marker({
                    position: { lat: transporte.Latitud, lng: transporte.Longitud },
                    map: map,
                    title: transporte.Nombre,
                    icon: iconoUrl
                });
                var rutaCoords = [];
                // Filtrar las rutas correspondientes a este transporte
                var rutasTransporte = rutas.filter(function(ruta) {
                    return ruta.IdTransporte === transporte.Id;
                });
                rutaCoords.push({ lat: transporte.Latitud, lng: transporte.Longitud });
                // Dibujar las rutas en el mapa
                rutasTransporte.forEach(function(ruta) {
                    rutaCoords.push({ lat: ruta.Latitud, lng: ruta.Longitud })
                });

                var rutaPolyline = new google.maps.Polyline({
                    path: rutaCoords,
                    geodesic: true,
                    strokeColor: colores[iterador],
                    strokeOpacity: 2.5,
                    strokeWeight: 5
                });

                rutaPolyline.setMap(map);
                iterador++;
            });
        }


        var app = new Vue({
            el: '#app',
            data: {
                arrayItems: [],
                model: {
                    Id: null,
                    Nombre: null,
                    Descripcion: "mi descrorion",
                    Latitud: -18.1559509,
                    Longitud: -71.251855,
                },

            },
            mounted() {//mounted ciclode vida  que inicia  load  init

                this.recordsRutes();
            },
            methods: {// van todos los metodos
                addImtes() {
                    let me = this;
                    if (!me.model.Nombre) {
                       return alert("llenar el campo");
                    }
                    let datos = { ...me.model };


                    let url = './CreateTransporte';
                    axios({
                        method: "POST",
                        url: url,
                        data: datos,
                    }).then(function (response) {
                        let { data } = response;
                        if (data.estado) {

                            me.recordsRutes();
                        }
                        console.log("response", response);

                    }).catch((error) => {
                        console.log(error);
                    });
                },
                recordsRutes() {
                    let url = './listTransports';
                    let me = this;
                    axios({
                        method: "GET",
                        url: url,
                    }).then(function (response) {
                        let { data } = response;
                        me.arrayItems = data;
                        console.log(me.arrayItems);
                        initMap();
                    }).catch((error) => {
                        console.log(error);
                    });
                },

            },
        })
        var input = document.getElementById("Nombre");
        var autocomplete = new google.maps.places.Autocomplete(input);
        console.log(autocomplete);

        // Escuchar el evento de selección de Place
        autocomplete.addListener('place_changed', function () {
            var place = autocomplete.getPlace();
            console.log(place)
            if (place.geometry) {
                let lat = place.geometry.location.lat();
                let long = place.geometry.location.lng();
                let descripcion = place.formatted_address;
                console.log(descripcion);
                document.getElementById('Latitud').value = lat;
                document.getElementById('Longitud').value = long;
                document.getElementById('Descripcion').value = descripcion;
            } else {
                alert('No se encontraron detalles del lugar');
            }
        });

        function agregarRuta() {
            let nombreRuta = $("txtruta").val();
            if (!nombreRuta) {
                alert("poner nombre de ruta");
            }
            let arrayRutas = [];
            let ruta = { id: null, nombre: nombreRuta };
            arrayRutas.push(ruta);
            var newCard = $('<div class="card">Tarjeta nueva</div>');
            // Agregar la nueva tarjeta al contenedor
            $('#card-container').append(newCard);
        }
        const scrollImages = document.querySelector(".scroll-images");
        const scrollLength = scrollImages.scrollWidth - scrollImages.clientWidth;
        const leftButton = document.querySelector(".left");
        const rightButton = document.querySelector(".right");        
        function leftScroll() {
            scrollImages.scrollBy({
                left: -200,
                behavior: "smooth"
            });
        }
        function rightScroll() {
            scrollImages.scrollBy({
                left: 200,
                behavior: "smooth"
            });
        }
        document.addEventListener("DOMContentLoaded", function () {
            function checkScroll() {
                const currentScroll = scrollImages.scrollLeft;
                if (currentScroll === 0) {
                    leftButton.setAttribute("disabled", "true");
                    rightButton.removeAttribute("disabled");
                } else if (currentScroll === scrollLength) {
                    rightButton.setAttribute("disabled", "true");
                    leftButton.removeAttribute("disabled");
                } else {
                    leftButton.removeAttribute("disabled");
                    rightButton.removeAttribute("disabled");
                }
            }
            scrollImages.addEventListener("scroll", checkScroll);
            window.addEventListener("resize", checkScroll);
            checkScroll();
            function leftScroll() {
                scrollImages.scrollBy({
                    left: -200,
                    behavior: "smooth"
                });
            }
            function rightScroll() {
                scrollImages.scrollBy({
                    left: 200,
                    behavior: "smooth"
                });
            }
            leftButton.addEventListener("click", leftScroll);
            rightButton.addEventListener("click", rightScroll);
        });

        var modal = document.getElementById('ModalRutas');

        // Get the button that opens the modal
        var btn = document.getElementById("btnNuevoNotificacion");

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        var btnGuardar = document.getElementById("btnGuardar");
        var btnEditar = document.getElementById("btnEditar");
        var btnCancelar = document.getElementById("btnCancelar");

        // When the user clicks the button, open the modal
        btn.onclick = function () {
            $("#btnGuardar").show();
            modal.style.display = "block";
        }

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
        }
        btnCancelar.onclick = function () {
            modal.style.display = "none";
        }

        btnGuardar.onclick = function () {
            // Lógica para guardar los datos del formulario
            // Obtener el formulario por su ID
            var form = $('#formRutas');
            //console.log("llegue aquu: " + form.submit());

            let formData = form.serializeFormJSON();
            var url = form.attr('action');
            // Enviar la petición AJAX al controlador
            $.ajax({
                type: 'POST', // Método HTTP de la petición
                url: url, // URL del controlador
                data: formData, // Datos del formulario
                success: function (response) {

                    console.log("Se guardo correctamente el Transporte público")
                    modal.style.display = "none";
                },
                error: function (xhr, status, error) {
                    // Ocurrió un error durante la petición
                    console.error(error);
                    // Realizar acciones adicionales si es necesario
                }
            });
        }
        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
    </script>
</body>
</html>